levels(data_sample$index)=levels(data_plot$index)=c('beta_0',
'beta_1',
'beta_2',
'beta_3',
'beta_4')
levels(data_sample$index)=levels(data_plot$index)=c('beta_0'=TeX('\\beta_0'),
'beta_1'=TeX('\\beta_1'),
'beta_2'=TeX('\\beta_2'),
'beta_3'=TeX('\\beta_3'),
'beta_4'=TeX('\\beta_4'))
(ggplot(data_plot)+
geom_histogram(aes(x=value,y=..density..),color='black',fill='#aaaaaa',bins=30,data=data_sample)+
geom_line(aes(x=x,y=fx,color=label,linetype=label=='Aprox. KL orig.'))+
scale_color_manual('',values=c('black','red','green'))+
scale_y_continuous(expand=c(0,0,0,0.5),limits=c(0,NA))+
facet_wrap(.~index,scales='free')+
guides(linetype='none')+
theme_bw()+
theme(legend.position="bottom"))
mode
beta_true
beta_sample_alt=rmvnorm(N,beta_mean,beta_var)
vals_scale_sample=data_scale%*%t(beta_sample_alt)
vals_p_sample=data_p%*%t(beta_sample_alt)
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rASL(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
beta_sample_alt=rmvnorm(N,beta_mean,beta_var)
vals_scale_sample=data_scale%*%t(beta_sample_alt)
vals_p_sample=data_p%*%t(beta_sample_alt)
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean=rowMeans(y_sample)
y_pred_icl=apply(y_sample,1,function(x){quantile(x,0.025)})
y_pred_icu=apply(y_sample,1,function(x){quantile(x,0.975)})
vals_scale_sample=data_scale%*%t(beta_sample)
dim(beta_sample)
dim(data_scale)
beta_sample_alt=rmvnorm(N,beta_mean,beta_var)
vals_scale_sample=data_scale%*%t(beta_sample_alt)
vals_p_sample=data_p%*%t(beta_sample_alt)
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean=rowMeans(y_sample)
y_pred_icl=apply(y_sample,1,function(x){quantile(x,0.025)})
y_pred_icu=apply(y_sample,1,function(x){quantile(x,0.975)})
vals_scale_sample=data_scale%*%beta_sample
vals_p_sample=data_p%*%beta_sample
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean_true=rowMeans(y_sample)
y_pred_icl_true=apply(y_sample,1,function(x){quantile(x,0.025)})
y_pred_icu_true=apply(y_sample,1,function(x){quantile(x,0.975)})
(ggplot()+
geom_point(aes(x=1:n,y=y,color='Observações',fill='Observações'))+
geom_point(aes(x=1:n,y=y_pred_mean,color='Aprox. KL',fill='Aprox. KL'),linetype='dashed',shape=3)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl,
ymax=y_pred_icu,
color='Aprox. KL',
fill='Aprox. KL'),alpha=0.8)+
geom_point(aes(x=1:n,y=y_pred_mean_true,color='Verdadeiro',fill='Verdadeiro'),linetype='dashed',shape=4)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl_true,
ymax=y_pred_icu_true,
color='Verdadeiro',
fill='Verdadeiro'),alpha=0.8,linetype='dashed')+
scale_color_manual('',values=c('#4444ff','black','#ff4444'))+
scale_fill_manual('',values=c('#4444ff','black','#ff4444'))+
theme_bw()+
theme(legend.position="bottom"))
data_plot=data.frame()
data_sample=pivot_longer(cbind(1:N,as.data.frame(t(beta_sample))),-1)
names(data_sample)=c('samp','index','value')
data_sample$index=substr(data_sample$index,2,2)
for(index in 1:k){
x=seq(qnorm(1/N,beta_mean_true[index],sqrt(beta_var_true[index,index])),
qnorm(1-1/N,beta_mean_true[index],sqrt(beta_var_true[index,index])),
l=1000)
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,beta_mean[index],sqrt(beta_var[index,index])),
label='Aprox. KL alt.',
index=as.character(index)
))
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,mode[index],sqrt(A[index,index])),
label='Aprox. Laplace',
index=as.character(index)
))
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,beta_mean_true[index],sqrt(beta_var_true[index,index])),
label='Aprox. KL orig.',
index=as.character(index)
))
}
data_plot$index=as.factor(data_plot$index)
data_sample$index=as.factor(data_sample$index)
levels(data_sample$index)=levels(data_plot$index)=c('beta_0',
'beta_1',
'beta_2',
'beta_3',
'beta_4')
levels(data_sample$index)=levels(data_plot$index)=c('beta_0'=TeX('\\beta_0'),
'beta_1'=TeX('\\beta_1'),
'beta_2'=TeX('\\beta_2'),
'beta_3'=TeX('\\beta_3'),
'beta_4'=TeX('\\beta_4'))
(ggplot(data_plot %>% filter(label!='Aprox. Laplace'))+
geom_histogram(aes(x=value,y=..density..),color='black',fill='#aaaaaa',bins=30,data=data_sample)+
geom_line(aes(x=x,y=fx,color=label,linetype=label=='Aprox. KL orig.'))+
scale_color_manual('',values=c('black','red','green'))+
scale_y_continuous(expand=c(0,0,0,0.5),limits=c(0,NA))+
facet_wrap(.~index,scales='free')+
guides(linetype='none')+
theme_bw()+
theme(legend.position="bottom"))
log.like=function(beta){
vals_scale=data_scale%*%beta
vals_p=data_p%*%beta
sum(dALD(y,exp(vals_scale),sigmoid(vals_p),log=TRUE))+dmvnorm(t(beta),beta_mean_prior,beta_var_prior,log=TRUE)
}
d_log_like=function(beta){calculus::derivative(function(beta){log.like(t(beta))},var=t(beta))}
mode=multiroot(d_log_like,start=beta_true)$root
A=solve(-calculus::hessian(function(beta){log.like(t(beta))},var=t(mode)))
beta_mean=mode
beta_var=A
beta_mean_ref=beta_mean
beta_var_ref=beta_var
N=5000
beta_sample=matrix(NA,k,N)
acep_list=matrix(0,k,N)
acep_p_list=matrix(0,k,N)
beta_unit=beta_mean_ref
cur_log_like=log.like(beta_unit)
beta_var_list=rep(NA,k)
for(j in 1:k){
beta_var_list[j]=beta_var_ref[j,j]-t(beta_var_ref[j,-j])%*%ginv(beta_var_ref[-j,-j])%*%beta_var_ref[j,-j]
}
for(i in 1:N){
for(j in 1:k){
beta_mean_j=beta_mean_ref[j]+beta_var_ref[j,-j]%*%ginv(beta_var_ref[-j,-j])%*%(beta_unit[-j]-beta_mean_ref[-j])
beta_var_j=beta_var_list[j]
prop_j=rnorm(1,beta_mean_j,sqrt(beta_var_j))
prop=beta_unit
prop[j]=prop_j
prop_log_like=log.like(prop)
prop_log_val=dnorm(prop_j,beta_mean_j,sqrt(beta_var_j),log=TRUE)
cur_log_val=dnorm(beta_unit[j],beta_mean_j,sqrt(beta_var_j),log=TRUE)
acep=exp(prop_log_like-cur_log_like+cur_log_val-prop_log_val)
acep_list[j,i]=acep
if(runif(1)<acep){
beta_unit[j]=prop_j
cur_log_like=prop_log_like
acep_list[j,i]=1
}
}
beta_sample[,i]=beta_unit
}
beta_mean_true=rowMeans(beta_sample)
beta_var_true=var(t(beta_sample))
mean(acep_list)
data_plot=data.frame()
data_sample=pivot_longer(cbind(1:N,as.data.frame(t(beta_sample))),-1)
names(data_sample)=c('samp','index','value')
data_sample$index=substr(data_sample$index,2,2)
for(index in 1:k){
x=seq(qnorm(1/N,beta_mean_true[index],sqrt(beta_var_true[index,index])),
qnorm(1-1/N,beta_mean_true[index],sqrt(beta_var_true[index,index])),
l=1000)
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,beta_mean[index],sqrt(beta_var[index,index])),
label='Aprox. KL alt.',
index=as.character(index)
))
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,mode[index],sqrt(A[index,index])),
label='Aprox. Laplace',
index=as.character(index)
))
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,beta_mean_true[index],sqrt(beta_var_true[index,index])),
label='Aprox. KL orig.',
index=as.character(index)
))
}
data_plot$index=as.factor(data_plot$index)
data_sample$index=as.factor(data_sample$index)
levels(data_sample$index)=levels(data_plot$index)=c('beta_0',
'beta_1',
'beta_2',
'beta_3',
'beta_4')
levels(data_sample$index)=levels(data_plot$index)=c('beta_0'=TeX('\\beta_0'),
'beta_1'=TeX('\\beta_1'),
'beta_2'=TeX('\\beta_2'),
'beta_3'=TeX('\\beta_3'),
'beta_4'=TeX('\\beta_4'))
(ggplot(data_plot %>% filter(label!='Aprox. Laplace'))+
geom_histogram(aes(x=value,y=..density..),color='black',fill='#aaaaaa',bins=30,data=data_sample)+
geom_line(aes(x=x,y=fx,color=label,linetype=label=='Aprox. KL orig.'))+
scale_color_manual('',values=c('black','red','green'))+
scale_y_continuous(expand=c(0,0,0,0.5),limits=c(0,NA))+
facet_wrap(.~index,scales='free')+
guides(linetype='none')+
theme_bw()+
theme(legend.position="bottom"))
beta_sample_alt=rmvnorm(N,beta_mean,beta_var)
vals_scale_sample=data_scale%*%t(beta_sample_alt)
vals_p_sample=data_p%*%t(beta_sample_alt)
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean=rowMeans(y_sample)
y_pred_icl=apply(y_sample,1,function(x){quantile(x,0.025)})
y_pred_icu=apply(y_sample,1,function(x){quantile(x,0.975)})
vals_scale_sample=data_scale%*%beta_sample
vals_p_sample=data_p%*%beta_sample
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean_true=rowMeans(y_sample)
y_pred_icl_true=apply(y_sample,1,function(x){quantile(x,0.025)})
y_pred_icu_true=apply(y_sample,1,function(x){quantile(x,0.975)})
(ggplot()+
geom_point(aes(x=1:n,y=y,color='Observações',fill='Observações'))+
geom_point(aes(x=1:n,y=y_pred_mean,color='Aprox. KL',fill='Aprox. KL'),linetype='dashed',shape=3)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl,
ymax=y_pred_icu,
color='Aprox. KL',
fill='Aprox. KL'),alpha=0.8)+
geom_point(aes(x=1:n,y=y_pred_mean_true,color='Verdadeiro',fill='Verdadeiro'),linetype='dashed',shape=4)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl_true,
ymax=y_pred_icu_true,
color='Verdadeiro',
fill='Verdadeiro'),alpha=0.8,linetype='dashed')+
scale_color_manual('',values=c('#4444ff','black','#ff4444'))+
scale_fill_manual('',values=c('#4444ff','black','#ff4444'))+
theme_bw()+
theme(legend.position="bottom"))
beta_mean=beta_mean_prior=rep(0,k)
beta_var=beta_var_prior=1*diag(k)
for(i in 1:n){
log.like=function(beta){
vals_scale=data_scale%*%beta
vals_p=data_p%*%beta
dALD(y[i],exp(vals_scale),sigmoid(vals_p),log=TRUE)+dmvnorm(t(beta),beta_mean_prior,beta_var_prior,log=TRUE)
}
d_log_like=function(beta){calculus::derivative(function(beta){log.like(t(beta))},var=t(beta))}
mode=multiroot(d_log_like,start=beta_true)$root
A=solve(-calculus::hessian(function(beta){log.like(t(beta))},var=t(mode)))
beta_mean <- mode
beta_var <- A
}
beta_mean=beta_mean_prior=rep(0,k)
beta_var=beta_var_prior=1*diag(k)
for(i in 1:n){
log.like=function(beta){
vals_scale=data_scale[i,]%*%beta
vals_p=data_p[i,]%*%beta
dALD(y[i],exp(vals_scale),sigmoid(vals_p),log=TRUE)+dmvnorm(t(beta),beta_mean_prior,beta_var_prior,log=TRUE)
}
d_log_like=function(beta){calculus::derivative(function(beta){log.like(t(beta))},var=t(beta))}
mode=multiroot(d_log_like,start=beta_mean)$root
A=solve(-calculus::hessian(function(beta){log.like(t(beta))},var=t(mode)))
beta_mean <- mode
beta_var <- A
}
log.like(beta_true)
mode
log.like=function(beta){
vals_scale=data_scale[i,]%*%beta
vals_p=data_p[i,]%*%beta
dALD(y[i],exp(vals_scale),sigmoid(vals_p),log=TRUE)+dmvnorm(t(beta),beta_mean_prior,beta_var_prior,log=TRUE)
}
d_log_like=function(beta){calculus::derivative(function(beta){log.like(t(beta))},var=t(beta))}
mode=multiroot(d_log_like,start=beta_mean)$root
d_log_like(beta_true)
beta_mean=beta_mean_prior=rep(0,k)
beta_var=beta_var_prior=1*diag(k)
for(i in 1:n){
log.like=function(beta){
vals_scale=data_scale[i,]%*%beta
vals_p=data_p[i,]%*%beta
sum(dALD(y[i],exp(vals_scale),sigmoid(vals_p),log=TRUE)+dmvnorm(t(beta),beta_mean_prior,beta_var_prior,log=TRUE))
}
d_log_like=function(beta){calculus::derivative(function(beta){log.like(t(beta))},var=t(beta))}
mode=multiroot(d_log_like,start=beta_mean)$root
A=solve(-calculus::hessian(function(beta){log.like(t(beta))},var=t(mode)))
beta_mean <- mode
beta_var <- A
}
d_log_like(beta_true)
multiroot(d_log_like,start=beta_mean)$root
d_log_like(t(beta_true))
d_log_like(beta_mean)
beta_mean
beta_mean=beta_mean_prior=rep(0,k)
beta_var=beta_var_prior=1*diag(k)
for(i in 1:n){
log.like=function(beta){
vals_scale=data_scale[i,]%*%beta
vals_p=data_p[i,]%*%beta
sum(dALD(y[i],exp(vals_scale),sigmoid(vals_p),log=TRUE)+dmvnorm(t(beta),beta_mean_prior,beta_var_prior,log=TRUE))
}
d_log_like=function(beta){calculus::derivative(function(beta){log.like(t(beta))},var=t(beta))}
mode=multiroot(d_log_like,start=beta_mean)$root
A=solve(-calculus::hessian(function(beta){log.like(t(beta))},var=t(mode)))
beta_mean <- mode
beta_var <- A
}
log.like=function(beta){
vals_scale=data_scale%*%beta
vals_p=data_p%*%beta
sum(dALD(y,exp(vals_scale),sigmoid(vals_p),log=TRUE))+dmvnorm(t(beta),beta_mean_prior,beta_var_prior,log=TRUE)
}
d_log_like=function(beta){calculus::derivative(function(beta){log.like(t(beta))},var=t(beta))}
beta_mean=mode=multiroot(d_log_like,start=beta_true)$root
beta_var=A=solve(-calculus::hessian(function(beta){log.like(t(beta))},var=t(mode)))
beta_mean_ref=beta_mean
beta_var_ref=beta_var
N=5000
beta_sample=matrix(NA,k,N)
acep_list=matrix(0,k,N)
acep_p_list=matrix(0,k,N)
beta_unit=beta_mean_ref
cur_log_like=log.like(beta_unit)
beta_var_list=rep(NA,k)
for(j in 1:k){
beta_var_list[j]=beta_var_ref[j,j]-t(beta_var_ref[j,-j])%*%ginv(beta_var_ref[-j,-j])%*%beta_var_ref[j,-j]
}
for(i in 1:N){
for(j in 1:k){
beta_mean_j=beta_mean_ref[j]+beta_var_ref[j,-j]%*%ginv(beta_var_ref[-j,-j])%*%(beta_unit[-j]-beta_mean_ref[-j])
beta_var_j=beta_var_list[j]
prop_j=rnorm(1,beta_mean_j,sqrt(beta_var_j))
prop=beta_unit
prop[j]=prop_j
prop_log_like=log.like(prop)
prop_log_val=dnorm(prop_j,beta_mean_j,sqrt(beta_var_j),log=TRUE)
cur_log_val=dnorm(beta_unit[j],beta_mean_j,sqrt(beta_var_j),log=TRUE)
acep=exp(prop_log_like-cur_log_like+cur_log_val-prop_log_val)
acep_list[j,i]=acep
if(runif(1)<acep){
beta_unit[j]=prop_j
cur_log_like=prop_log_like
acep_list[j,i]=1
}
}
beta_sample[,i]=beta_unit
}
beta_mean_true=rowMeans(beta_sample)
beta_var_true=var(t(beta_sample))
mean(acep_list)
data_plot=data.frame()
data_sample=pivot_longer(cbind(1:N,as.data.frame(t(beta_sample))),-1)
names(data_sample)=c('samp','index','value')
data_sample$index=substr(data_sample$index,2,2)
for(index in 1:k){
x=seq(qnorm(1/N,beta_mean_true[index],sqrt(beta_var_true[index,index])),
qnorm(1-1/N,beta_mean_true[index],sqrt(beta_var_true[index,index])),
l=1000)
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,beta_mean[index],sqrt(beta_var[index,index])),
label='Aprox. KL alt.',
index=as.character(index)
))
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,mode[index],sqrt(A[index,index])),
label='Aprox. Laplace',
index=as.character(index)
))
data_plot=rbind(data_plot,data.frame(
x=x,
fx=dnorm(x,beta_mean_true[index],sqrt(beta_var_true[index,index])),
label='Aprox. KL orig.',
index=as.character(index)
))
}
data_plot$index=as.factor(data_plot$index)
data_sample$index=as.factor(data_sample$index)
levels(data_sample$index)=levels(data_plot$index)=c('beta_0',
'beta_1',
'beta_2',
'beta_3',
'beta_4')
levels(data_sample$index)=levels(data_plot$index)=c('beta_0'=TeX('\\beta_0'),
'beta_1'=TeX('\\beta_1'),
'beta_2'=TeX('\\beta_2'),
'beta_3'=TeX('\\beta_3'),
'beta_4'=TeX('\\beta_4'))
(ggplot(data_plot %>% filter(label!='Aprox. Laplace'))+
geom_histogram(aes(x=value,y=..density..),color='black',fill='#aaaaaa',bins=30,data=data_sample)+
geom_line(aes(x=x,y=fx,color=label,linetype=label=='Aprox. KL orig.'))+
scale_color_manual('',values=c('black','red','green'))+
scale_y_continuous(expand=c(0,0,0,0.5),limits=c(0,NA))+
facet_wrap(.~index,scales='free')+
guides(linetype='none')+
theme_bw()+
theme(legend.position="bottom"))
beta_sample_alt=rmvnorm(N,beta_mean,beta_var)
vals_scale_sample=data_scale%*%t(beta_sample_alt)
vals_p_sample=data_p%*%t(beta_sample_alt)
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean=rowMeans(y_sample)
y_pred_icl=apply(y_sample,1,function(x){quantile(x,0.025)})
y_pred_icu=apply(y_sample,1,function(x){quantile(x,0.975)})
vals_scale_sample=data_scale%*%beta_sample
vals_p_sample=data_p%*%beta_sample
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean_true=rowMeans(y_sample)
y_pred_icl_true=apply(y_sample,1,function(x){quantile(x,0.025)})
y_pred_icu_true=apply(y_sample,1,function(x){quantile(x,0.975)})
(ggplot()+
geom_point(aes(x=1:n,y=y,color='Observações',fill='Observações'))+
geom_point(aes(x=1:n,y=y_pred_mean,color='Aprox. KL',fill='Aprox. KL'),linetype='dashed',shape=3)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl,
ymax=y_pred_icu,
color='Aprox. KL',
fill='Aprox. KL'),alpha=0.8)+
geom_point(aes(x=1:n,y=y_pred_mean_true,color='Verdadeiro',fill='Verdadeiro'),linetype='dashed',shape=4)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl_true,
ymax=y_pred_icu_true,
color='Verdadeiro',
fill='Verdadeiro'),alpha=0.8,linetype='dashed')+
scale_color_manual('',values=c('#4444ff','black','#ff4444'))+
scale_fill_manual('',values=c('#4444ff','black','#ff4444'))+
theme_bw()+
theme(legend.position="bottom"))
beta_sample_alt=rmvnorm(N,beta_mean,beta_var)
vals_scale_sample=data_scale%*%t(beta_sample_alt)
vals_p_sample=data_p%*%t(beta_sample_alt)
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean=rowMeans(y_sample)/exp(lin_pred_scale)
y_pred_icl=apply(y_sample,1,function(x){quantile(x,0.025)})/exp(lin_pred_scale)
y_pred_icu=apply(y_sample,1,function(x){quantile(x,0.975)})/exp(lin_pred_scale)
vals_scale_sample=data_scale%*%beta_sample
vals_p_sample=data_p%*%beta_sample
y_sample=matrix(NA,n,N)
for(i in 1:n){
for(j in 1:N){
y_sample[i,j]=rALD(1,0,exp(vals_scale_sample[i,j]),sigmoid(vals_p_sample[i,j]))
}
}
y_pred_mean_true=rowMeans(y_sample)/exp(lin_pred_scale)
y_pred_icl_true=apply(y_sample,1,function(x){quantile(x,0.025)})/exp(lin_pred_scale)
y_pred_icu_true=apply(y_sample,1,function(x){quantile(x,0.975)})/exp(lin_pred_scale)
(ggplot()+
geom_point(aes(x=1:n,y=y/exp(lin_pred_scale),color='Observações',fill='Observações'))+
geom_point(aes(x=1:n,y=y_pred_mean,color='Aprox. KL',fill='Aprox. KL'),linetype='dashed',shape=3)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl,
ymax=y_pred_icu,
color='Aprox. KL',
fill='Aprox. KL'),alpha=0.8)+
geom_point(aes(x=1:n,y=y_pred_mean_true,color='Verdadeiro',fill='Verdadeiro'),linetype='dashed',shape=4)+
geom_errorbar(aes(x=1:n,
ymin=y_pred_icl_true,
ymax=y_pred_icu_true,
color='Verdadeiro',
fill='Verdadeiro'),alpha=0.8,linetype='dashed')+
scale_color_manual('',values=c('#4444ff','black','#ff4444'))+
scale_fill_manual('',values=c('#4444ff','black','#ff4444'))+
theme_bw()+
theme(legend.position="bottom"))
